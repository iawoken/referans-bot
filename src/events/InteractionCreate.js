const Model = require("../models/User");
const { MessageActionRow, MessageButton } = require("discord.js");
const { stripIndents } = require("common-tags");

const Event = {
    name: "interactionCreate",
    execute: async (client, interaction) => {
        if (!interaction.isButton()) return;
        const Guild = client.guilds.cache.get(client?.config?.GUILD) || client.guilds.cache.first(); 

        if (interaction?.customId.startsWith("accept")) {
            const Member = Guild.members.cache.get(interaction?.customId.split("-")[1]);
            const Referans = Guild.members.cache.get(interaction?.customId.split("-")[2]);
            if (!Member || !Referans) return interaction.reply({content: `Hata: Ãœye veya referans sahibi sunucuda bulunamadÄ±.`, ephemeral: true});;
            const Schema = await Model.findOne({Id: Member.id});
            if (interaction.member.id !== Referans.id) return interaction.reply({content: `Hata: Sadece referans sahibi kullanÄ±cÄ±, kiÅŸiyi sunucuya kabul edebilir.`, ephemeral: true});
            if (Schema && Schema?.Verified !== false) return interaction.reply({content: `Hata: Bu kiÅŸinin referansÄ± halihazÄ±rda kabul edilmiÅŸ.`, ephemeral: true});

            Member.roles.set(Member.roles.cache.clone().filter((role) => role.managed).map((role) => role.id).concat(client?.config?.VERIFIED));
            await Model.findOneAndUpdate(
                { Id: Member.id },
                { $set: { Verified: true, Admin: interaction.member.id, Joined: Date.now() } },
                { upsert: true }
            );

            Member.send(stripIndents`
            Selam <@${Member?.id}> ğŸ‘‹

            Sunucumuzda kayÄ±t iÅŸlemin referansÄ±n olan <@${Referans.id}> tarafÄ±ndan gerÃ§ekleÅŸtirildi!
            Sunucu iÃ§erisinde ki tÃ¼m aktiviten kayÄ±t altÄ±na alÄ±nmaktadÄ±r bu sebepten Ã¶tÃ¼rÃ¼ alacaÄŸÄ±n herhangi bir cezadan referansÄ±n olan kiÅŸi de sorumlu tutulacaktÄ±r!
            Sorun teÅŸkil eden kiÅŸiler sunucumuzda barÄ±namaz, sistemlerimizden kalÄ±cÄ± olarak yasaklanÄ±rlar.

            EÄŸlenceli vakit geÃ§irmen dileÄŸiyle, esenlikle kal...
            `).catch(() => {});

            const row = new MessageActionRow().addComponents([
                new MessageButton().setStyle('SUCCESS').setLabel('Accept').setCustomId(`accept-${Member.id}-${Referans.id}`).setDisabled(true),
                new MessageButton().setStyle('DANGER').setLabel('Refuse').setCustomId(`refuse-${Member.id}-${Referans.id}`).setDisabled(true)
            ]);

            interaction.reply({ content: `<@${Member.id}> Ã¼yesi baÅŸarÄ±lÄ± bir ÅŸekilde sunucuya kayÄ±t edildi.`, ephemeral: true })
            if (interaction.message) interaction.message?.edit({ components: [row] });
            return interaction;
        } else if (interaction?.customId.startsWith("refuse")) {
            const Member = Guild.members.cache.get(interaction?.customId.split("-")[1]);
            const Referans = Guild.members.cache.get(interaction?.customId.split("-")[2]);
            if (!Member || !Referans) return interaction.reply({content: `Hata: Ãœye veya referans sahibi sunucuda bulunamadÄ±.`, ephemeral: true});;
            const Schema = await Model.findOne({Id: Member.id});
            if (interaction.member.id !== Referans.id) return interaction.reply({content: `Hata: Sadece referans sahibi kullanÄ±cÄ±, kiÅŸiyi sunucuya kabul edebilir.`, ephemeral: true});
            if (Schema && Schema?.Verified == true) return interaction.reply({content: `Hata: Bu kiÅŸinin referansÄ± kabul edilmiÅŸ bu sebepten Ã¶tÃ¼rÃ¼ iÅŸleminiz iptal edildi.`, ephemeral: true});
            
            await Model.deleteMany({ Id: Member.id });
            const row = new MessageActionRow().addComponents([
                new MessageButton().setStyle('SUCCESS').setLabel('Accept').setCustomId(`accept-${Member.id}-${Referans.id}`).setDisabled(true),
                new MessageButton().setStyle('DANGER').setLabel('Refuse').setCustomId(`refuse-${Member.id}-${Referans.id}`).setDisabled(true)
            ]);

            Member.send(stripIndents`
            Selam <@${Member?.id}> ğŸ‘‹

            Sunucuya kayÄ±t talebin <@${Referans.id}> tarafÄ±ndan reddedildi!
            
            Sebebi ÅŸunlardan herhangi birisi olabilir;
            \`1\` KiÅŸi, sizi tanÄ±mÄ±yor veyahut referans olmak istemiyor.
            \`2\` Sicil kayÄ±tÄ±nÄ±z Ã§ok kabarÄ±k bu nedenle sunucu dÃ¼zenini bozacaÄŸÄ±nÄ±zdan korkuyor.
            \`3\` Sorun teÅŸkil edebilecek Ã¶zelliklere sahip olduÄŸunuzu tespit etmiÅŸ olabilir.
            `).catch(() => {});

            interaction.reply({ content: `<@${Member.id}> Ã¼yesinin talebi baÅŸarÄ±lÄ± bir ÅŸekilde reddedildi.`, ephemeral: true })
            if (interaction.message) interaction.message?.edit({ components: [row] });
            return interaction;
        }
    }
}

module.exports = Event;
